{
  "address": "0x67e2C0c3909f773C2F33b2dAee4e2fE6c8732c6d",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "buyProduct",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProductsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getTransactionHistory",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "txID",
              "type": "uint256"
            },
            {
              "internalType": "enum Marketplace.TranType",
              "name": "tranType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "productId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "seller",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "createdAt",
              "type": "uint256"
            }
          ],
          "internalType": "struct Marketplace.Transaction[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "readProduct",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "removeProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_image",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_location",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "writeProduct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x5ba106a95e5e0abb6b5b87771766f5b986e088b85122b05d8e23fd1cb5883434",
  "receipt": {
    "to": null,
    "from": "0xE25B6BCE467098677343AF6e6a768998678dCA4a",
    "contractAddress": "0x67e2C0c3909f773C2F33b2dAee4e2fE6c8732c6d",
    "transactionIndex": 0,
    "gasUsed": "1607392",
    "logsBloom": "0x
    "blockHash": "0xa9c4d49133624d2462f367f8a943419676e53fd87b2bfa2a2ae6f21a4021f5a3",
    "transactionHash": "0x5ba106a95e5e0abb6b5b87771766f5b986e088b85122b05d8e23fd1cb5883434",
    "logs": [],
    "blockNumber": 20168993,
    "cumulativeGasUsed": "1607392",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 7,
  "solcInputHash": "ad152908191fcb94c4d485bc8142f5cd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"buyProduct\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProductsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getTransactionHistory\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"txID\",\"type\":\"uint256\"},{\"internalType\":\"enum Marketplace.TranType\",\"name\":\"tranType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"productId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct Marketplace.Transaction[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"readProduct\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"removeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_image\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_location\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"writeProduct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Marketplace.sol\":\"Marketplace\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Marketplace.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// Version of Solidity compiler this program was written for\\npragma solidity >=0.7.0 <0.9.0;\\n\\n// Interface for the ERC20 token, in our case cEUR\\ninterface IERC20Token {\\n    // Transfers tokens from one address to another\\n    function transfer(address, uint256) external returns (bool);\\n\\n    // Approves a transfer of tokens from one address to another\\n    function approve(address, uint256) external returns (bool);\\n\\n    // Transfers tokens from one address to another, with the permission of the first address\\n    function transferFrom(address, address, uint256) external returns (bool);\\n\\n    // Returns the total supply of tokens\\n    function totalSupply() external view returns (uint256);\\n\\n    // Returns the balance of tokens for a given address\\n    function balanceOf(address) external view returns (uint256);\\n\\n    // Returns the amount of tokens that an address is allowed to transfer from another address\\n    function allowance(address, address) external view returns (uint256);\\n\\n    // Event for token transfers\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    // Event for approvals of token transfers\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\\n\\n// Contract for the marketplace\\ncontract Marketplace {\\n    // Keeps track of the number of products in the marketplace\\n    uint256 internal productsLength = 0;\\n    // Address of the cREALToken\\n    address internal cREALTokenAddress = 0xE4D517785D091D3c54818832dB6094bcc2744545;\\n\\n    // Structure for a product\\n    struct Product {\\n        // Address of the product owner\\n        address payable owner;\\n        // Name of the product\\n        string name;\\n        // Link to an image of the product\\n        string image;\\n        // Description of the product\\n        string description;\\n        // Location of the product\\n        string location;\\n        // Price of the product in tokens\\n        uint256 price;\\n        // Number of times the product has been sold\\n        uint256 sold;\\n    }\\n\\n    enum TranType {\\n        ADD,\\n        REMOVE,\\n        BUY\\n    }\\n\\n    struct Transaction {\\n        uint256 txID;\\n        TranType tranType;\\n        uint256 productId;\\n        address seller;\\n        uint256 price;\\n        uint256 createdAt;\\n    }\\n\\n    // Mapping of products to their index\\n    mapping(uint256 => Product) internal products;\\n\\n    // Mapping containing user transaction history owner balance in contract\\n    mapping(address => Transaction[]) internal transactionHistory;\\n\\n    modifier isOwner(uint _index, address caller) {\\n        require(products[_index].owner == caller, \\\"not owner\\\");\\n        _;\\n    }\\n\\n    // Writes a new product to the marketplace\\n    function writeProduct(\\n        string memory _name,\\n        string memory _image,\\n        string memory _description,\\n        string memory _location,\\n        uint256 _price\\n    ) public {\\n        // Checks that price of product is greater than 0\\n        require(_price > 0, \\\"Price must be greater 0\\\");\\n        // Number of times the product has been sold is initially 0 because it has not been sold yet\\n        uint256 _sold = 0;\\n        // Set product index\\n        uint256 _index = productsLength;\\n        // Adds a new Product struct to the products mapping\\n        products[_index] = Product(\\n            // Sender's address is set as the owner\\n            payable(msg.sender),\\n            _name,\\n            _image,\\n            _description,\\n            _location,\\n            _price,\\n            _sold\\n        );\\n        // add transaction to user history\\n        Transaction[] storage _history = transactionHistory[msg.sender];\\n        uint256 id = _history.length;\\n        _history.push(\\n            Transaction({\\n                txID: id,\\n                tranType: TranType.ADD,\\n                productId: _index,\\n                seller: products[_index].owner,\\n                price: products[_index].price,\\n                createdAt: block.timestamp\\n            })\\n        );\\n        // Increases the number of products in the marketplace by 1\\n        productsLength++;\\n    }\\n\\n    // Reads a product from the marketplace\\n    function readProduct(\\n        // Index of the product\\n        uint256 _index\\n    )\\n        public\\n        view\\n        returns (\\n            address payable,\\n            string memory,\\n            string memory,\\n            string memory,\\n            string memory,\\n            uint256,\\n            uint256\\n        )\\n    {\\n        // Returns the details of the product\\n        return (\\n            products[_index].owner,\\n            products[_index].name,\\n            products[_index].image,\\n            products[_index].description,\\n            products[_index].location,\\n            products[_index].price,\\n            products[_index].sold\\n        );\\n    }\\n\\n    // Buys a product from the marketplace\\n    function buyProduct(\\n        // Index of the product\\n        uint256 _index\\n    ) public payable {\\n        // Transfers the tokens from the buyer to the seller\\n        require(\\n            IERC20Token(cREALTokenAddress).transferFrom(\\n                // Sender's address is the buyer\\n                msg.sender,\\n                // Receiver's address is the seller\\n                products[_index].owner,\\n                // Amount of tokens to transfer is the price of the product\\n                products[_index].price\\n            ),\\n            // If transfer fails, throw an error message\\n            \\\"Transfer failed.\\\"\\n        );\\n        // Increases the number of times the product has been sold\\n        products[_index].sold++;\\n\\n        // add transaction to user history\\n        Transaction[] storage _history = transactionHistory[msg.sender];\\n        uint256 id = _history.length;\\n        _history.push(\\n            Transaction({\\n                txID: id,\\n                tranType: TranType.BUY,\\n                productId: _index,\\n                seller: products[_index].owner,\\n                price: products[_index].price,\\n                createdAt: block.timestamp\\n            })\\n        );\\n    }\\n\\n    // Remove a product from the marketplace\\n    function removeProduct(\\n        uint _index\\n    ) public isOwner(_index, msg.sender) {\\n        // delete item from contract\\n        delete (products[_index]);\\n        // add transaction to user history\\n        Transaction[] storage _history = transactionHistory[msg.sender];\\n        uint256 id = _history.length;\\n        _history.push(\\n            Transaction({\\n                txID: id,\\n                tranType: TranType.REMOVE,\\n                productId: _index,\\n                seller: products[_index].owner,\\n                price: products[_index].price,\\n                createdAt: block.timestamp\\n            })\\n        );\\n    }\\n\\n    // Returns the transaction history of a user\\n    function getTransactionHistory(address _user) public view returns (Transaction[] memory){\\n        return transactionHistory[_user];\\n    }\\n\\n    // Returns the number of products in the marketplace\\n    function getProductsLength() public view returns (uint256) {\\n        return (productsLength);\\n    }\\n}\\n\",\"keccak256\":\"0x724d4a01ca9cab0276830d23a064dd8ecede8cbab61f0522747954ac07e85bae\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60806040526000805573e4d517785d091d3c54818832db6094bcc2744545600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006957600080fd5b50611bb9806100796000396000f3fe6080604052600436106100555760003560e01c80631155dfe51461005a5780635ee95cae146100855780638642269e146100ae5780638da8f27b146100ca578063d20cf0e8146100f3578063fffa7e2e14610130575b600080fd5b34801561006657600080fd5b5061006f610173565b60405161007c9190610f9a565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a79190610ff5565b61017c565b005b6100c860048036038101906100c39190610ff5565b61046f565b005b3480156100d657600080fd5b506100f160048036038101906100ec9190611168565b610785565b005b3480156100ff57600080fd5b5061011a600480360381019061011591906112b1565b610abc565b604051610127919061149d565b60405180910390f35b34801561013c57600080fd5b5061015760048036038101906101529190610ff5565b610c13565b60405161016a979695949392919061155f565b60405180910390f35b60008054905090565b80338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990611636565b60405180910390fd5b60026000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600061026d9190610f24565b60028201600061027d9190610f24565b60038201600061028d9190610f24565b60048201600061029d9190610f24565b6005820160009055600682016000905550506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081805490509050816040518060c001604052808381526020016001600281111561032157610320611319565b5b81526020018781526020016002600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260008981526020019081526020016000206005015481526020014281525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548160ff021916908360028111156103fc576103fb611319565b5b02179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015550505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd336002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660026000868152602001908152602001600020600501546040518463ffffffff1660e01b815260040161051a939291906116c4565b6020604051808303816000875af1158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190611733565b61059c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610593906117ac565b60405180910390fd5b6002600082815260200190815260200160002060060160008154809291906105c3906117fb565b91905055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081805490509050816040518060c0016040528083815260200160028081111561063957610638611319565b5b81526020018581526020016002600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260008781526020019081526020016000206005015481526020014281525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548160ff0219169083600281111561071457610713611319565b5b02179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a082015181600501555050505050565b600081116107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf9061188f565b60405180910390fd5b600080805490506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001888152602001878152602001868152602001858152602001848152602001838152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816108879190611ab1565b50604082015181600201908161089d9190611ab1565b5060608201518160030190816108b39190611ab1565b5060808201518160040190816108c99190611ab1565b5060a0820151816005015560c082015181600601559050506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081805490509050816040518060c001604052808381526020016000600281111561095357610952611319565b5b81526020018581526020016002600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260008781526020019081526020016000206005015481526020014281525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836002811115610a2e57610a2d611319565b5b02179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a082015181600501555050600080815480929190610aac906117fb565b9190505550505050505050505050565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610c0857838290600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900460ff166002811115610b6f57610b6e611319565b5b6002811115610b8157610b80611319565b5b8152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201548152505081526020019060010190610b1d565b505050509050919050565b60006060806060806000806002600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008a8152602001908152602001600020600101600260008b8152602001908152602001600020600201600260008c8152602001908152602001600020600301600260008d8152602001908152602001600020600401600260008e815260200190815260200160002060050154600260008f815260200190815260200160002060060154858054610ce7906118de565b80601f0160208091040260200160405190810160405280929190818152602001828054610d13906118de565b8015610d605780601f10610d3557610100808354040283529160200191610d60565b820191906000526020600020905b815481529060010190602001808311610d4357829003601f168201915b50505050509550848054610d73906118de565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9f906118de565b8015610dec5780601f10610dc157610100808354040283529160200191610dec565b820191906000526020600020905b815481529060010190602001808311610dcf57829003601f168201915b50505050509450838054610dff906118de565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2b906118de565b8015610e785780601f10610e4d57610100808354040283529160200191610e78565b820191906000526020600020905b815481529060010190602001808311610e5b57829003601f168201915b50505050509350828054610e8b906118de565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb7906118de565b8015610f045780601f10610ed957610100808354040283529160200191610f04565b820191906000526020600020905b815481529060010190602001808311610ee757829003601f168201915b505050505092509650965096509650965096509650919395979092949650565b508054610f30906118de565b6000825580601f10610f425750610f61565b601f016020900490600052602060002090810190610f609190610f64565b5b50565b5b80821115610f7d576000816000905550600101610f65565b5090565b6000819050919050565b610f9481610f81565b82525050565b6000602082019050610faf6000830184610f8b565b92915050565b6000604051905090565b600080fd5b600080fd5b610fd281610f81565b8114610fdd57600080fd5b50565b600081359050610fef81610fc9565b92915050565b60006020828403121561100b5761100a610fbf565b5b600061101984828501610fe0565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110758261102c565b810181811067ffffffffffffffff821117156110945761109361103d565b5b80604052505050565b60006110a7610fb5565b90506110b3828261106c565b919050565b600067ffffffffffffffff8211156110d3576110d261103d565b5b6110dc8261102c565b9050602081019050919050565b82818337600083830152505050565b600061110b611106846110b8565b61109d565b90508281526020810184848401111561112757611126611027565b5b6111328482856110e9565b509392505050565b600082601f83011261114f5761114e611022565b5b813561115f8482602086016110f8565b91505092915050565b600080600080600060a0868803121561118457611183610fbf565b5b600086013567ffffffffffffffff8111156111a2576111a1610fc4565b5b6111ae8882890161113a565b955050602086013567ffffffffffffffff8111156111cf576111ce610fc4565b5b6111db8882890161113a565b945050604086013567ffffffffffffffff8111156111fc576111fb610fc4565b5b6112088882890161113a565b935050606086013567ffffffffffffffff81111561122957611228610fc4565b5b6112358882890161113a565b925050608061124688828901610fe0565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061127e82611253565b9050919050565b61128e81611273565b811461129957600080fd5b50565b6000813590506112ab81611285565b92915050565b6000602082840312156112c7576112c6610fbf565b5b60006112d58482850161129c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61131381610f81565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061135957611358611319565b5b50565b600081905061136a82611348565b919050565b600061137a8261135c565b9050919050565b61138a8161136f565b82525050565b61139981611273565b82525050565b60c0820160008201516113b5600085018261130a565b5060208201516113c86020850182611381565b5060408201516113db604085018261130a565b5060608201516113ee6060850182611390565b506080820151611401608085018261130a565b5060a082015161141460a085018261130a565b50505050565b6000611426838361139f565b60c08301905092915050565b6000602082019050919050565b600061144a826112de565b61145481856112e9565b935061145f836112fa565b8060005b83811015611490578151611477888261141a565b975061148283611432565b925050600181019050611463565b5085935050505092915050565b600060208201905081810360008301526114b7818461143f565b905092915050565b60006114ca82611253565b9050919050565b6114da816114bf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561151a5780820151818401526020810190506114ff565b60008484015250505050565b6000611531826114e0565b61153b81856114eb565b935061154b8185602086016114fc565b6115548161102c565b840191505092915050565b600060e082019050611574600083018a6114d1565b81810360208301526115868189611526565b9050818103604083015261159a8188611526565b905081810360608301526115ae8187611526565b905081810360808301526115c28186611526565b90506115d160a0830185610f8b565b6115de60c0830184610f8b565b98975050505050505050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006116206009836114eb565b915061162b826115ea565b602082019050919050565b6000602082019050818103600083015261164f81611613565b9050919050565b61165f81611273565b82525050565b6000819050919050565b600061168a61168561168084611253565b611665565b611253565b9050919050565b600061169c8261166f565b9050919050565b60006116ae82611691565b9050919050565b6116be816116a3565b82525050565b60006060820190506116d96000830186611656565b6116e660208301856116b5565b6116f36040830184610f8b565b949350505050565b60008115159050919050565b611710816116fb565b811461171b57600080fd5b50565b60008151905061172d81611707565b92915050565b60006020828403121561174957611748610fbf565b5b60006117578482850161171e565b91505092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006117966010836114eb565b91506117a182611760565b602082019050919050565b600060208201905081810360008301526117c581611789565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061180682610f81565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611838576118376117cc565b5b600182019050919050565b7f5072696365206d75737420626520677265617465722030000000000000000000600082015250565b60006118796017836114eb565b915061188482611843565b602082019050919050565b600060208201905081810360008301526118a88161186c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118f657607f821691505b602082108103611909576119086118af565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119717fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611934565b61197b8683611934565b95508019841693508086168417925050509392505050565b60006119ae6119a96119a484610f81565b611665565b610f81565b9050919050565b6000819050919050565b6119c883611993565b6119dc6119d4826119b5565b848454611941565b825550505050565b600090565b6119f16119e4565b6119fc8184846119bf565b505050565b5b81811015611a2057611a156000826119e9565b600181019050611a02565b5050565b601f821115611a6557611a368161190f565b611a3f84611924565b81016020851015611a4e578190505b611a62611a5a85611924565b830182611a01565b50505b505050565b600082821c905092915050565b6000611a8860001984600802611a6a565b1980831691505092915050565b6000611aa18383611a77565b9150826002028217905092915050565b611aba826114e0565b67ffffffffffffffff811115611ad357611ad261103d565b5b611add82546118de565b611ae8828285611a24565b600060209050601f831160018114611b1b5760008415611b09578287015190505b611b138582611a95565b865550611b7b565b601f198416611b298661190f565b60005b82811015611b5157848901518255600182019150602085019450602081019050611b2c565b86831015611b6e5784890151611b6a601f891682611a77565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220b174c6057f2302eba717d1796a92af992ea3702a8344ffebbf4284c71def4cbe64736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100555760003560e01c80631155dfe51461005a5780635ee95cae146100855780638642269e146100ae5780638da8f27b146100ca578063d20cf0e8146100f3578063fffa7e2e14610130575b600080fd5b34801561006657600080fd5b5061006f610173565b60405161007c9190610f9a565b60405180910390f35b34801561009157600080fd5b506100ac60048036038101906100a79190610ff5565b61017c565b005b6100c860048036038101906100c39190610ff5565b61046f565b005b3480156100d657600080fd5b506100f160048036038101906100ec9190611168565b610785565b005b3480156100ff57600080fd5b5061011a600480360381019061011591906112b1565b610abc565b604051610127919061149d565b60405180910390f35b34801561013c57600080fd5b5061015760048036038101906101529190610ff5565b610c13565b60405161016a979695949392919061155f565b60405180910390f35b60008054905090565b80338073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161021990611636565b60405180910390fd5b60026000848152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018201600061026d9190610f24565b60028201600061027d9190610f24565b60038201600061028d9190610f24565b60048201600061029d9190610f24565b6005820160009055600682016000905550506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081805490509050816040518060c001604052808381526020016001600281111561032157610320611319565b5b81526020018781526020016002600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260008981526020019081526020016000206005015481526020014281525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548160ff021916908360028111156103fc576103fb611319565b5b02179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a0820151816005015550505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd336002600085815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660026000868152602001908152602001600020600501546040518463ffffffff1660e01b815260040161051a939291906116c4565b6020604051808303816000875af1158015610539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055d9190611733565b61059c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610593906117ac565b60405180910390fd5b6002600082815260200190815260200160002060060160008154809291906105c3906117fb565b91905055506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081805490509050816040518060c0016040528083815260200160028081111561063957610638611319565b5b81526020018581526020016002600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260008781526020019081526020016000206005015481526020014281525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548160ff0219169083600281111561071457610713611319565b5b02179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a082015181600501555050505050565b600081116107c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bf9061188f565b60405180910390fd5b600080805490506040518060e001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001888152602001878152602001868152602001858152602001848152602001838152506002600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010190816108879190611ab1565b50604082015181600201908161089d9190611ab1565b5060608201518160030190816108b39190611ab1565b5060808201518160040190816108c99190611ab1565b5060a0820151816005015560c082015181600601559050506000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209050600081805490509050816040518060c001604052808381526020016000600281111561095357610952611319565b5b81526020018581526020016002600087815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600260008781526020019081526020016000206005015481526020014281525090806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010160006101000a81548160ff02191690836002811115610a2e57610a2d611319565b5b02179055506040820151816002015560608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816004015560a082015181600501555050600080815480929190610aac906117fb565b9190505550505050505050505050565b6060600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610c0857838290600052602060002090600602016040518060c0016040529081600082015481526020016001820160009054906101000a900460ff166002811115610b6f57610b6e611319565b5b6002811115610b8157610b80611319565b5b8152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820154815260200160058201548152505081526020019060010190610b1d565b505050509050919050565b60006060806060806000806002600089815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260008a8152602001908152602001600020600101600260008b8152602001908152602001600020600201600260008c8152602001908152602001600020600301600260008d8152602001908152602001600020600401600260008e815260200190815260200160002060050154600260008f815260200190815260200160002060060154858054610ce7906118de565b80601f0160208091040260200160405190810160405280929190818152602001828054610d13906118de565b8015610d605780601f10610d3557610100808354040283529160200191610d60565b820191906000526020600020905b815481529060010190602001808311610d4357829003601f168201915b50505050509550848054610d73906118de565b80601f0160208091040260200160405190810160405280929190818152602001828054610d9f906118de565b8015610dec5780601f10610dc157610100808354040283529160200191610dec565b820191906000526020600020905b815481529060010190602001808311610dcf57829003601f168201915b50505050509450838054610dff906118de565b80601f0160208091040260200160405190810160405280929190818152602001828054610e2b906118de565b8015610e785780601f10610e4d57610100808354040283529160200191610e78565b820191906000526020600020905b815481529060010190602001808311610e5b57829003601f168201915b50505050509350828054610e8b906118de565b80601f0160208091040260200160405190810160405280929190818152602001828054610eb7906118de565b8015610f045780601f10610ed957610100808354040283529160200191610f04565b820191906000526020600020905b815481529060010190602001808311610ee757829003601f168201915b505050505092509650965096509650965096509650919395979092949650565b508054610f30906118de565b6000825580601f10610f425750610f61565b601f016020900490600052602060002090810190610f609190610f64565b5b50565b5b80821115610f7d576000816000905550600101610f65565b5090565b6000819050919050565b610f9481610f81565b82525050565b6000602082019050610faf6000830184610f8b565b92915050565b6000604051905090565b600080fd5b600080fd5b610fd281610f81565b8114610fdd57600080fd5b50565b600081359050610fef81610fc9565b92915050565b60006020828403121561100b5761100a610fbf565b5b600061101984828501610fe0565b91505092915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110758261102c565b810181811067ffffffffffffffff821117156110945761109361103d565b5b80604052505050565b60006110a7610fb5565b90506110b3828261106c565b919050565b600067ffffffffffffffff8211156110d3576110d261103d565b5b6110dc8261102c565b9050602081019050919050565b82818337600083830152505050565b600061110b611106846110b8565b61109d565b90508281526020810184848401111561112757611126611027565b5b6111328482856110e9565b509392505050565b600082601f83011261114f5761114e611022565b5b813561115f8482602086016110f8565b91505092915050565b600080600080600060a0868803121561118457611183610fbf565b5b600086013567ffffffffffffffff8111156111a2576111a1610fc4565b5b6111ae8882890161113a565b955050602086013567ffffffffffffffff8111156111cf576111ce610fc4565b5b6111db8882890161113a565b945050604086013567ffffffffffffffff8111156111fc576111fb610fc4565b5b6112088882890161113a565b935050606086013567ffffffffffffffff81111561122957611228610fc4565b5b6112358882890161113a565b925050608061124688828901610fe0565b9150509295509295909350565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061127e82611253565b9050919050565b61128e81611273565b811461129957600080fd5b50565b6000813590506112ab81611285565b92915050565b6000602082840312156112c7576112c6610fbf565b5b60006112d58482850161129c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61131381610f81565b82525050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6003811061135957611358611319565b5b50565b600081905061136a82611348565b919050565b600061137a8261135c565b9050919050565b61138a8161136f565b82525050565b61139981611273565b82525050565b60c0820160008201516113b5600085018261130a565b5060208201516113c86020850182611381565b5060408201516113db604085018261130a565b5060608201516113ee6060850182611390565b506080820151611401608085018261130a565b5060a082015161141460a085018261130a565b50505050565b6000611426838361139f565b60c08301905092915050565b6000602082019050919050565b600061144a826112de565b61145481856112e9565b935061145f836112fa565b8060005b83811015611490578151611477888261141a565b975061148283611432565b925050600181019050611463565b5085935050505092915050565b600060208201905081810360008301526114b7818461143f565b905092915050565b60006114ca82611253565b9050919050565b6114da816114bf565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561151a5780820151818401526020810190506114ff565b60008484015250505050565b6000611531826114e0565b61153b81856114eb565b935061154b8185602086016114fc565b6115548161102c565b840191505092915050565b600060e082019050611574600083018a6114d1565b81810360208301526115868189611526565b9050818103604083015261159a8188611526565b905081810360608301526115ae8187611526565b905081810360808301526115c28186611526565b90506115d160a0830185610f8b565b6115de60c0830184610f8b565b98975050505050505050565b7f6e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b60006116206009836114eb565b915061162b826115ea565b602082019050919050565b6000602082019050818103600083015261164f81611613565b9050919050565b61165f81611273565b82525050565b6000819050919050565b600061168a61168561168084611253565b611665565b611253565b9050919050565b600061169c8261166f565b9050919050565b60006116ae82611691565b9050919050565b6116be816116a3565b82525050565b60006060820190506116d96000830186611656565b6116e660208301856116b5565b6116f36040830184610f8b565b949350505050565b60008115159050919050565b611710816116fb565b811461171b57600080fd5b50565b60008151905061172d81611707565b92915050565b60006020828403121561174957611748610fbf565b5b60006117578482850161171e565b91505092915050565b7f5472616e73666572206661696c65642e00000000000000000000000000000000600082015250565b60006117966010836114eb565b91506117a182611760565b602082019050919050565b600060208201905081810360008301526117c581611789565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061180682610f81565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611838576118376117cc565b5b600182019050919050565b7f5072696365206d75737420626520677265617465722030000000000000000000600082015250565b60006118796017836114eb565b915061188482611843565b602082019050919050565b600060208201905081810360008301526118a88161186c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118f657607f821691505b602082108103611909576119086118af565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026119717fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82611934565b61197b8683611934565b95508019841693508086168417925050509392505050565b60006119ae6119a96119a484610f81565b611665565b610f81565b9050919050565b6000819050919050565b6119c883611993565b6119dc6119d4826119b5565b848454611941565b825550505050565b600090565b6119f16119e4565b6119fc8184846119bf565b505050565b5b81811015611a2057611a156000826119e9565b600181019050611a02565b5050565b601f821115611a6557611a368161190f565b611a3f84611924565b81016020851015611a4e578190505b611a62611a5a85611924565b830182611a01565b50505b505050565b600082821c905092915050565b6000611a8860001984600802611a6a565b1980831691505092915050565b6000611aa18383611a77565b9150826002028217905092915050565b611aba826114e0565b67ffffffffffffffff811115611ad357611ad261103d565b5b611add82546118de565b611ae8828285611a24565b600060209050601f831160018114611b1b5760008415611b09578287015190505b611b138582611a95565b865550611b7b565b601f198416611b298661190f565b60005b82811015611b5157848901518255600182019150602085019450602081019050611b2c565b86831015611b6e5784890151611b6a601f891682611a77565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220b174c6057f2302eba717d1796a92af992ea3702a8344ffebbf4284c71def4cbe64736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 71,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "productsLength",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 74,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "cREALTokenAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 112,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "products",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(Product)89_storage)"
      },
      {
        "astId": 118,
        "contract": "contracts/Marketplace.sol:Marketplace",
        "label": "transactionHistory",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_array(t_struct(Transaction)107_storage)dyn_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Transaction)107_storage)dyn_storage": {
        "base": "t_struct(Transaction)107_storage",
        "encoding": "dynamic_array",
        "label": "struct Marketplace.Transaction[]",
        "numberOfBytes": "32"
      },
      "t_enum(TranType)93": {
        "encoding": "inplace",
        "label": "enum Marketplace.TranType",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_array(t_struct(Transaction)107_storage)dyn_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Marketplace.Transaction[])",
        "numberOfBytes": "32",
        "value": "t_array(t_struct(Transaction)107_storage)dyn_storage"
      },
      "t_mapping(t_uint256,t_struct(Product)89_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct Marketplace.Product)",
        "numberOfBytes": "32",
        "value": "t_struct(Product)89_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Product)89_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Product",
        "members": [
          {
            "astId": 76,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "owner",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 78,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "name",
            "offset": 0,
            "slot": "1",
            "type": "t_string_storage"
          },
          {
            "astId": 80,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "image",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 82,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "description",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 84,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "location",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          },
          {
            "astId": 86,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          },
          {
            "astId": 88,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "sold",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(Transaction)107_storage": {
        "encoding": "inplace",
        "label": "struct Marketplace.Transaction",
        "members": [
          {
            "astId": 95,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "txID",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 98,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "tranType",
            "offset": 0,
            "slot": "1",
            "type": "t_enum(TranType)93"
          },
          {
            "astId": 100,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "productId",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 102,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "seller",
            "offset": 0,
            "slot": "3",
            "type": "t_address"
          },
          {
            "astId": 104,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "price",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 106,
            "contract": "contracts/Marketplace.sol:Marketplace",
            "label": "createdAt",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}